/** You will usually want to use styles-from-map, unless you're trying to support a map that may not have the keys requested. */
@mixin styles-from-map-quietly($map) {
    @each $style, $value in $map {
        @if (type-of($value) == 'map') {
            #{$style} {
                @include styles-from-map($value);
            }
        } @else {
            #{$style}: #{$value};
        }
    }
}

@mixin styles-from-map($map) {
    @if type-of($map) == 'null' {
        @warn 'Value passed to mixin styles-from-map is null. No styles will be outputted';
    }
    @if type-of($map) != 'map' and type-of($map) != 'null' {
        @error 'Value passed to mixin styles-from-map must be a map - #{$map}';
    }

    @include styles-from-map-quietly($map);
}

@function map-deep-get($_map, $_keys...) {
    @each $_key in $_keys {
        @if not map-has-key($_map, $_key) {
            @warn 'Key `#{$_key}` not found in map `#{$_map}`. Will return null';
        }
        $_map: map-get($_map, $_key);
    }
    @return $_map;
}

@function recursive-map-merge($map1, $map2, $config:() ) {
    @if (type-of($map1) == map or (type-of($map1) == list and length($map1) == 0)) and (type-of($map2) == map or (type-of($map2) == list and length($map2) == 0)) {
        $result: $map1;
        @each $key, $value in $map2 {
            @if (type-of(map-get($result, $key)) == map and type-of($value) == map) {
                $result: map-merge($result, ($key: recursive-map-merge(map-get($result, $key), $value)));
            }
            @else if (map-get($config, "merge-lists") and type-of(map-get($result, $key)) == list and type-of($value) == list) {
                $result: map-merge($result, ($key: join(map-get($result, $key), $value)));
            }
            @else {
                $result: map-merge($result, ($key: $value));
            }
        }
        @return $result;
    }
    @else {
        @error "recursive-map-merge() expects parameters to be of type map!";
        @return null;
    }
}
